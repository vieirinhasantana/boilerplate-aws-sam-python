AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    {{ cookiecutter.project_name }}

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        Timeout: 5
        Runtime: python3.8
        Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
{%- if cookiecutter.include_safe_deployment == "y" %}
        AutoPublishAlias: live # More info about Safe Deployments: https://github.com/awslabs/serverless-application-model/blob/master/docs/safe_lambda_deployments.rst
        DeploymentPreference:
            Type: Linear10PercentEvery1Minute {% endif %}
        Environment:
            Variables:
                # Powertools env vars: https://awslabs.github.io/aws-lambda-powertools-python/#environment-variables
                LOG_LEVEL: INFO
                POWERTOOLS_LOGGER_SAMPLE_RATE: 0.1
                POWERTOOLS_LOGGER_LOG_EVENT: true
                POWERTOOLS_METRICS_NAMESPACE: {{ cookiecutter.metrics_namespace }}
                POWERTOOLS_SERVICE_NAME: {{ cookiecutter.project_slug }}

Resources:
    DefaultFunction:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            Handler: app.lambda_handler
            CodeUri: default
            Description: Default function
            Events:
                CatchAll:
                    Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Path: /hello
                        Method: GET
            # Policies: # Example inline policy
            #     - Version: "2012-10-17"
            #     Statement:
            #         - Effect: "Allow"
            #         Action:
            #             - "ssm:GetParameter"
            #         Resource:
            #             - "*"
            Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
                Variables:
                    PARAM1: VALUE
            Tags:
                SOLUTION: MyServerlessApplication
                SOLUTION_MODULE: MyDefaultFunction

    # Sample policy to add additional permissions to your Lambda
    DefaultFunctionAdditionalPermission:
        Type: "AWS::IAM::Policy"
        Properties:
            PolicyName: "root"
            PolicyDocument:
                Version: "2012-10-17"
                Statement:
                    -
                        Effect: "Allow"
                        Action: "ssm:GetParameters"
                        Resource: "*"
            Roles:
                - !Ref DefaultFunctionRole # Sample policy to demonstrate Implicit IAM Role created with SAM
Outputs:
    DefaultApigwURL:
      Description: "API Gateway endpoint URL for Prod environment for Default Function"
      Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello"

    DefaultFunction:
      Description: "Boilerplate Lambda Function ARN"
      Value: !GetAtt DefaultFunction.Arn

